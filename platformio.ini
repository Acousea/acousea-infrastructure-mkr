; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
build_flags =
    -std=gnu++17            ; Especificar C++17
    -Os                     ; Nivel de optimización para tamaño del programa
    -ffunction-sections     ; Eliminar funciones no usadas
    -fdata-sections         ; Eliminar variables no usadas
    -Wl,--gc-sections       ; Eliminar secciones no usadas
;    -Wl,-Map,output.map     ; Generar un mapa de memoria
;    -Llib/MockLib -lMockLib

build_unflags = -std=gnu++11 -fexceptions

extra_scripts =
    pre:copy_nanopb_files.py

custom_nanopb_protos =
    +<lib/NodeDevice/proto/nodeDevice.proto>

custom_nanopb_options =
    --error-on-unmatched

; Custom output directory for nanopb generated files
;custom_nanopb_output_dir = lib/NodeDevice/proto/generated

lib_deps =
    Adafruit BusIO
    Adafruit GFX Library
    Adafruit LC709203F
    Adafruit INA219
    Adafruit SSD1306
    ArduinoJson
    Arduino_BQ24195
    Arduino_MKRGPS
    Arduino_MKRMEM
    IridiumSBDi2c
    LoRa
    RTCZero
    SD
    SparkFun u-blox GNSS Arduino Library
    Arduino Low Power
    Adafruit SleepyDog Library
    nanopb/Nanopb@^0.4.91

; Deprecated library addition method
;lib_extra_dirs = lib/MockLib lib/acousea


[env:mkrwan1310]
build_type = release
platform = atmelsam
board = mkrwan1310
framework = arduino
platform_packages = toolchain-gccarmnoneeabi@~1.90301.0
test_framework = unity
test_build_src = false
; Custom maximum program size
;board_upload.maximum_size=8388608


; $Env:Path += ";$Env:USERPROFILE\.platformio\penv\Scripts"
; export PATH="$PATH:/c/Users/admin/.platformio/penv/Scripts"
[env:native]
platform = native
build_type = release
; framework vacío en native
build_flags =
    -std=gnu++17
    -O0 -g3                        ; Depuración cómoda
    -fno-omit-frame-pointer
    -DPLATFORM_NATIVE=1            ; Flag propio para ifdefs
    -Wl,-subsystem,console     ; <-- fuerza consola (main en vez de WinMain)

build_unflags =
    -mwindows                  ; <-- por si viniera de alguna lib/flag heredado

; Evita dependencias HW
lib_deps = nanopb/Nanopb@^0.4.91

lib_ignore =
    Adafruit BusIO
    Adafruit GFX Library
    Adafruit LC709203F
    Adafruit INA219
    Adafruit SSD1306
    Arduino_BQ24195
    Arduino_MKRGPS
    Arduino_MKRMEM
    IridiumSBDi2c
    LoRa
    RTCZero
    SD
    SparkFun u-blox GNSS Arduino Library
    Arduino Low Power
    Adafruit SleepyDog Library


; nanopb funciona en host también, si la usas compílala aquí o inclúyela en MockLib



; ------------------------------------------------------------------------------
; -------------------------------- DEBUGGING -----------------------------------
; ------------------------------------------------------------------------------

; Debugging using jlink
[env:debug_mkrwan1310]
build_type = debug
platform = atmelsam
board = mkrwan1310
framework = arduino
platform_packages = toolchain-gccarmnoneeabi@~1.90301.0

build_flags =
    ${env.build_flags}
    -Os                      ; Optimización para tamaño
    -g2                      ; Información de depuración básica
    -ffunction-sections
    -fdata-sections
    -Wl,--gc-sections
    -flto                    ; Link Time Optimization

; JLink debugger
debug_tool = jlink
; SWD interface
upload_protocol = jlink
debug_port = :2331
debug_speed = 4000

; Disable init breaks
debug_init_break =
